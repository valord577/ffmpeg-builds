name: _buildx
on:
  workflow_call:
    inputs:
      disable_shared:
        default: true
        required: false
        type: boolean
      disable_static:
        default: false
        required: false
        type: boolean
      disable_upload:
        default: true
        required: false
        type: boolean

jobs:
  _buildx:
    strategy:
      matrix:
        pkg_type: [shared, static]
        platform: [iphoneos, iphonesimulator, macosx]
        arch: [arm64, x86_64]
        exclude:
          - platform: 'iphoneos'
            arch: 'x86_64'
    runs-on: macos-14
    outputs:
      version: ${{ steps.version.outputs._PKG_VERSION }}
    env:
      _REPO_THIS: "_repo_this"
      _SETP_CAN_RUN: ${{ (! inputs.disable_shared && matrix.pkg_type == 'shared') || (! inputs.disable_static && matrix.pkg_type == 'static') }}
      INST_DIR: "${{ github.workspace }}/${{ github.workflow }}"
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      CCACHE_GHA_KEY: ${{ matrix.pkg_type }}-${{ matrix.platform }}-${{ matrix.arch }}-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
      CCACHE_GHA_KEY_RESTORE: ${{ matrix.pkg_type }}-${{ matrix.platform }}-${{ matrix.arch }}
    steps:
      - name: checkout this repo
        uses: actions/checkout@v4
        with:
          path: ${{ env._REPO_THIS }}
          fetch-depth: 0
          lfs: true
      - name: install required software(s)
        run: |
          brew list -l
          brew install ccache nasm
      - name: gh action ccache restore
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ${{ env.CCACHE_GHA_KEY }}
          restore-keys: |
            ${{ env.CCACHE_GHA_KEY_RESTORE }}
      - name: buildx library - ${{ github.workflow }}
        if: ${{ env._SETP_CAN_RUN == 'true' }}
        run: |
          source ${{ env._REPO_THIS }}/build_${{ matrix.platform }}_${{ matrix.arch }}.sh
          compile ${{ github.workflow }} ${{ matrix.pkg_type }} ${{ matrix.platform }} ${{ matrix.arch }}
      - name: gh action ccache save
        if: ${{ env._SETP_CAN_RUN == 'true' }}
        uses: actions/cache/save@v4
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ${{ env.CCACHE_GHA_KEY }}
      - name: set required env `_PKG_VERSION`
        id: version
        if: ${{ env._SETP_CAN_RUN == 'true' }}
        run: |
          pushd -- "${{ env._REPO_THIS }}/deps/${{ github.workflow }}"
          _PKG_VERSION=$(git describe --tags --always --abbrev=7)
          popd

          echo "_PKG_VERSION=${_PKG_VERSION}" >> "$GITHUB_ENV"
          echo "_PKG_VERSION=${_PKG_VERSION}" >> "$GITHUB_OUTPUT"
      - name: set required env `_PKG_ZIP_NAME`
        if: ${{ env._SETP_CAN_RUN == 'true' }}
        run: |
          echo "_PKG_ZIP_NAME=${{ github.workflow }}_${{ matrix.platform }}_${{ matrix.arch }}_${{ env._PKG_VERSION }}_${{ matrix.pkg_type }}" >> "$GITHUB_ENV"
      - name: compress library - ${{ github.workflow }}
        if: ${{ env._SETP_CAN_RUN == 'true' }}
        run: |
          zip -ry "${{ env._PKG_ZIP_NAME }}.zip" ${{ github.workflow }}
      - name: show debug info
        run: |
          env
          echo -e "\n"
          echo -e "${PWD}"
          echo -e "\n"
          ls -Alh -- .
          echo -e "\n"
          ccache -s
          echo -e "\n"
          ccache -p
      - name: upload library - ${{ github.workflow }}
        if: ${{ env._SETP_CAN_RUN == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env._PKG_ZIP_NAME }}
          path: ${{ env._PKG_ZIP_NAME }}.zip
  _upload:
    needs: _buildx
    runs-on: ubuntu-latest
    env:
      _REPO_PKGS: "_repo_pkgs"
      _PUSH_CAN_EXE: ${{ github.event_name == 'push' && (! inputs.disable_upload) }}
    steps:
      - name: checkout pkgs repo
        uses: actions/checkout@v4
        with:
          path: ${{ env._REPO_PKGS }}
          ref: packages
          lfs: true
      - name: download ${{ github.workflow }} libraries
        uses: actions/download-artifact@v4
        with:
          path: ${{ github.workspace }}/${{ github.workflow }}
      - name: show debug info
        run: |
          env
          echo -e "\n"
          echo -e "${PWD}"
          echo -e "\n"
          ls -Alh -- .
          echo -e "\n"
          ls -AlhR ${{ github.workflow }}
      - name: commit to pre-compiled packages
        run: |
          pushd -- "${{ env._REPO_PKGS }}"
          {
            git config user.name  "${{ github.run_id }}@gh-action"
            git config user.email "${{ github.run_id }}@gh-action"
            git config --list

            mkdir -p '${{ github.workflow }}/${{ needs._buildx.outputs.version }}'
            mv -f ${{ github.workspace }}/${{ github.workflow }}/*/*.zip '${{ github.workflow }}/${{ needs._buildx.outputs.version }}'

            git lfs track ${{ github.workflow }}/${{ needs._buildx.outputs.version }}/*.zip
            git add .gitattributes

            git add .
            git status
            git commit -m "gh action: ${{ github.workflow }}/${{ needs._buildx.outputs.version }}/${{ github.run_id }}"

            if ${{ env._PUSH_CAN_EXE == 'true' }}; then { git push; } fi
          }
          popd
